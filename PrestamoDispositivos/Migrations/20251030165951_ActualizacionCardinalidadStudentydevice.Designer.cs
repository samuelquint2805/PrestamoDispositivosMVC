// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrestamoDispositivos.DataContext.Sections;

#nullable disable

namespace PrestamoDispositivos.Migrations
{
    [DbContext(typeof(DatacontextPres))]
    [Migration("20251030165951_ActualizacionCardinalidadStudentydevice")]
    partial class ActualizacionCardinalidadStudentydevice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrestamoDispositivos.Models.Device", b =>
                {
                    b.Property<Guid>("IdDisp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Almacenamiento")
                        .HasColumnType("int");

                    b.Property<string>("EstadoDisp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procesador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaGrafica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDisp");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.Loan", b =>
                {
                    b.Property<Guid>("IdPrestamos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstadoPrestamo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAdminDev")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDispo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEstudiante")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEvento")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPrestamos");

                    b.HasIndex("IdAdminDev");

                    b.HasIndex("IdDispo");

                    b.HasIndex("IdEstudiante");

                    b.HasIndex("IdEvento");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.LoanEvent", b =>
                {
                    b.Property<Guid>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoPrestamos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvento");

                    b.ToTable("EventoPrestamos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.Student", b =>
                {
                    b.Property<Guid>("IdEst")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Carnet")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoIns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("semestreCursado")
                        .HasColumnType("int");

                    b.HasKey("IdEst");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.deviceManager", b =>
                {
                    b.Property<Guid>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdmin");

                    b.ToTable("AdminDisp");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.studentStatus", b =>
                {
                    b.Property<Guid>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstEstu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("EstadoEstudiantes");
                });

            modelBuilder.Entity("StudentstudentStatus", b =>
                {
                    b.Property<Guid>("EstadoEstIdStatus")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstadoEstudiante")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EstadoEstIdStatus", "EstadoEstudiante");

                    b.HasIndex("EstadoEstudiante");

                    b.ToTable("StudentstudentStatus");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.Loan", b =>
                {
                    b.HasOne("PrestamoDispositivos.Models.deviceManager", "DeviceManager")
                        .WithMany("Loans")
                        .HasForeignKey("IdAdminDev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrestamoDispositivos.Models.Device", "Dispositivo")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdDispo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrestamoDispositivos.Models.Student", "Estudiante")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrestamoDispositivos.Models.LoanEvent", "EventoPrestamos")
                        .WithMany("EventosPrestamos")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceManager");

                    b.Navigation("Dispositivo");

                    b.Navigation("Estudiante");

                    b.Navigation("EventoPrestamos");
                });

            modelBuilder.Entity("StudentstudentStatus", b =>
                {
                    b.HasOne("PrestamoDispositivos.Models.studentStatus", null)
                        .WithMany()
                        .HasForeignKey("EstadoEstIdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrestamoDispositivos.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("EstadoEstudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.Device", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.LoanEvent", b =>
                {
                    b.Navigation("EventosPrestamos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.Student", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("PrestamoDispositivos.Models.deviceManager", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
